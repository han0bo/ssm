<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           https://www.springframework.org/schema/security/spring-security.xsd">

    <!--对登录和失败页面放行-->
    <security:http pattern="/login.jsp" security="none"></security:http>
    <security:http pattern="/error.jsp" security="none"></security:http>
    <security:http pattern="/favicon.ico" security="none"></security:http>
    <security:http pattern="/css/**" security="none"></security:http>
    <security:http pattern="/img/**" security="none"></security:http>
    <security:http pattern="/plugins/**" security="none"></security:http>

    <!--
        配置拦截规则
            auto-config：使用自带的页面
            use-expressions：是否使用spel表达式，如果使用表达式：hasRole('ROLE_USER')
    -->
    <security:http auto-config="true" use-expressions="false">
        <!--配置拦截的请求地址，任何请求地址都必须有ROLE_USER的权限-->
        <security:intercept-url pattern="/**" access="ROLE_USER"/>
        <!--
            指定安全框架使用的页面
                login-pag：指定登录页面
                login-processing-url：登录的请求路径，登录时必须要使用该路径
                default-target-url：登录成功后进入的页面
                authentication-failure-url：认证失败之后要进入的页面
        -->
        <security:form-login login-page="/login.jsp"
                             login-processing-url="/login"
                             default-target-url="/index.jsp"
                             authentication-failure-url="/login.jsp"></security:form-login>

        <!--关闭跨站请求伪造-->
        <security:csrf disabled="true"></security:csrf>

        <!--退出-->
        <security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/login.jsp"></security:logout>

    </security:http>

    <!--配置认证信息：认证管理器-->
    <security:authentication-manager>
        <!--认证信息的提供者 关联用户服务对象 - 提供账号和密码-->
        <security:authentication-provider user-service-ref="sysUserServiceImpl">

            <!--指定加密工具类-->
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
            <!--用户的服务对象-->
<!--            <security:user-service>-->
                <!--用户信息：是临时账号和密码-->
                <!--
                    {noop}：不使用加密
                    authorities：指定用户的认证角色
                -->
<!--                <security:user name="admin" password="{noop}admin" authorities="ROLE_USER"/>-->
<!--            </security:user-service>-->
        </security:authentication-provider>
    </security:authentication-manager>

    <!--配置加密工具类-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

</beans>